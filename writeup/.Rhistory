data <- read_survey("../data/data_nonanon.csv")
### load data
data <- read_survey("../data/data_nonanon.csv")
### anonymize data
anon_data = data |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43)
View(data)
### load data
data <- read_survey("../data/data_nonanon.csv")
View(data)
anon_data = data |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43) |>
top_n(100)
View(data)
anon_data = data |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43)
anon_data = data |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43) |>
top_n(100)
View(anon_data)
anon_data = data |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43) |>
top_n(99)
View(anon_data)
### load data
data <- read_survey("../data/data_nonanon.csv")
anon_data = data |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43) |>
top_n(99)
View(anon_data)
### anonymize data
anon_data1 = data |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43) |>
top_n(99)
anon_data1 = data |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43) |>
top_n(98)
anon_data2 = data |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43) |>
top_n(98)
anon_data = data |>
top_n(100) |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43)
### load packages
library("tidyverse")
library("qualtRics")
library("plyr")
library("dplyr")
# Set working directory
setwd("/Users/bendix/Desktop/krauss2003_rescue") # [TODO] Change this once you've checked everything.
getwd()
### load data
data <- read_survey("../data/data_nonanon.csv")
### load data
data <- read_survey("../data/data_nonanon.csv")
anon_data3 = data |>
top_n(100) |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43)
anon_data3 = data |>
top_n(99) |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43)
anon_data3 = data |>
top_n(100) |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43)
anon_data3 = data |>
top_n(99) |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43)
anon_data3 = data |>
top_n(98) |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43)
anon_data3 = data |>
top_n(100) |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43)
anon_data3 = data |>
head(100) |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43)
anon_data = data |>
head(100) |>
select(ResponseId,
Finished,
"Duration (in seconds)",
Q7,
Q9,
Q10,
Q20,
Q14,
Q15,
Q43)
View(anon_data)
write.csv(anon_data, "../data/experiment.csv")
### load data
data <- read.csv("../data/experiment.csv")
View(data)
### load data
data <- read.csv("../data/experiment.csv")
View(data)
tidy_data = data |>
unite(switch, c(Q10, Q20), na.rm = T) |>
mutate(switch = case_when(switch == 'switch to door 2' |
switch == 'switch to the last remaining door' ~ TRUE,
TRUE ~ FALSE)) |>
dplyr::rename(wins_cases_if_stays = Q7,
wins_cases_if_switches = Q9,
already_familiar = Q14,
already_knew_answer = Q15,
own_answer = Q43) |>
mutate(already_familiar =
case_when(already_familiar ==
'I was familiar with this game' ~ TRUE,
TRUE ~ FALSE)) |>
mutate(already_knew_answer =
case_when(already_knew_answer ==
'I already knew what the correct answer should be' ~ TRUE,
TRUE ~ FALSE)) |>
mutate(own_answer =
case_when(own_answer ==
'I arrived at the answer on my own' ~ TRUE,
TRUE ~ FALSE)) |>
mutate(control =
case_when(is.na(wins_cases_if_stays) ~ TRUE,
TRUE ~ FALSE))
View(tidy_data)
relevant_tidy_data = tidy_data |>
filter("Duration (in seconds)" >= 60) |>
filter(Finished == T) |>
filter(already_familiar == F) |>
filter(already_knew_answer == F) |>
filter(own_answer == T) |>
select(ResponseId, control, switch)
relevant_tidy_data <- read_csv("../data/experiment_coded.csv")
relevant_tidy_data <- read_csv("../data/experiment_coded.csv")
table <- with(
relevant_tidy_data,
table(correct_justification, control))
# after coding answers, load file
relevant_tidy_data <- read_csv("../data/experiment_coded.csv")
# generate contingency table that displays how many participants in the control
# and experimental condition provided a correct justification
table <- with(
relevant_tidy_data,
table(correct_justification, control))
table
# The first proportion is that of correct justifications given in
# the control condition. The second proportion is that of correct justifications
# given in experimental condition.
proportions = data.frame(Condition=c("Control","Experimental"),
Proportion=c((table[2, 2]/
(table[2, 2] + table[1, 2])),
(table[2,1]/
(table[2, 1] + table[1, 1]))))
# perform Cohen's h test
library("pwr")
# The first proportion is that of correct justifications given in
# the experimental condition. The second proportion is that of correct
# justifications given in control condition.
h <- ES.h(
proportions$Proportion[2],
proportions$Proportion[1]
)
h
# perform Fisher's exact test
fisher_exact_test <- fisher.test(as.matrix(table))
fisher_exact_test
# generate contingency table that displays how many participants in the control
# and experimental condition indicated that the contestant should switch
# (i.e., gave a correct answer)
table_switch <- with(
relevant_tidy_data,
table(switch, control))
table_switch
# Chi squared test for rate of switch choices
chisq_test <- chisq.test(table_switch)
chisq_test
# Plots of results
library(ggplot2)
# Plot from replication study
plot <- ggplot(data=proportions,
aes(x=Condition, y=(Proportion)*100)) +
geom_bar(stat="identity") +
scale_x_discrete(breaks=c("Control", "Experimental"),
labels=c("Control", "Experimental")) + ylim(0, 100) +
labs(title = "Replication results",
x = "Condition",
y = "Percentage correct (%)")
plot
# Plot from the original study
proportions_original_study = data.frame(Condition=c("Control","Experimental"),
Proportion=c(.03, .38))
plot_original_study <- ggplot(data=proportions_original_study,
aes(x=Condition, y=(Proportion)*100)) +
geom_bar(stat="identity") +
scale_x_discrete(breaks=c("Control","Experimental"),
labels=c("Control", "Experimental")) + ylim(0, 100) +
labs(title = "Original study results",
x = "Condition",
y = "Percentage correct (%)")
plot_original_study
proportions_Wilcox_study = data.frame(Condition=c("Control","Experimental"),
Proportion=c(0, 0))
plot_Wilcox_study <- ggplot(data=proportions_original_study,
aes(x=Condition, y=(Proportion)*100)) +
geom_bar(stat="identity") +
scale_x_discrete(breaks=c("Control","Experimental"),
labels=c("Control", "Experimental")) + ylim(0, 100) +
labs(title = "Original study results",
x = "Condition",
y = "Percentage correct (%)")
proportions_Wilcox_study
plot_Wilcox_study
plot_Wilcox_study <- ggplot(data=proportions_Wilcox_study,
aes(x=Condition, y=(Proportion)*100)) +
geom_bar(stat="identity") +
scale_x_discrete(breaks=c("Control","Experimental"),
labels=c("Control", "Experimental")) + ylim(0, 100) +
labs(title = "Original study results",
x = "Condition",
y = "Percentage correct (%)")
plot_Wilcox_study
plot_original_study +
plot_Wilcox_study +
plot +
plot_layout(ncol = 3) &
plot_annotation(tag_levels = "A") &
theme(plot.tag = element_text(face = "bold", size = 20))
library(ggplot2)
plot_original_study +
plot_Wilcox_study +
plot +
plot_layout(ncol = 3) &
plot_annotation(tag_levels = "A") &
theme(plot.tag = element_text(face = "bold", size = 20))
plot_original_study +
plot_Wilcox_study +
plot &
plot_layout(ncol = 3) &
plot_annotation(tag_levels = "A") &
theme(plot.tag = element_text(face = "bold", size = 20))
plot_original_study +
plot_Wilcox_study +
plot &
plot_layout(ncol = 3)
plot_original_study +
plot_Wilcox_study +
plot +
plot_layout(ncol = 3)
grid.arrange(plot_original_study, plot_Wilcox_study, plot, ncol = 3)
library(gridExtra)
grid.arrange(plot_original_study, plot_Wilcox_study, plot, ncol = 3)
plot_Wilcox_study <- ggplot(data=proportions_Wilcox_study,
aes(x=Condition, y=(Proportion)*100)) +
geom_bar(stat="identity") +
scale_x_discrete(breaks=c("Control","Experimental"),
labels=c("Control", "Experimental")) + ylim(0, 100) +
labs(title = "Wilcox (2018)",
x = "Condition",
y = "Percentage correct (%)")
plot_original_study <- ggplot(data=proportions_original_study,
aes(x=Condition, y=(Proportion)*100)) +
geom_bar(stat="identity") +
scale_x_discrete(breaks=c("Control","Experimental"),
labels=c("Control", "Experimental")) + ylim(0, 100) +
labs(title = "Krauss & Wang (2003)",
x = "Condition",
y = "Percentage correct (%)")
grid.arrange(plot_original_study, plot_Wilcox_study, plot, ncol = 3)
plot <- ggplot(data=proportions,
aes(x=Condition, y=(Proportion)*100)) +
geom_bar(stat="identity") +
scale_x_discrete(breaks=c("Control", "Experimental"),
labels=c("Control", "Experimental")) + ylim(0, 100) +
labs(title = "Second replication",
x = "Condition",
y = "Percentage correct (%)")
plot_Wilcox_study <- ggplot(data=proportions_Wilcox_study,
aes(x=Condition, y=(Proportion)*100)) +
geom_bar(stat="identity") +
scale_x_discrete(breaks=c("Control","Experimental"),
labels=c("Control", "Experimental")) + ylim(0, 100) +
labs(title = "First replication",
x = "Condition",
y = "Percentage correct (%)")
plot_original_study <- ggplot(data=proportions_original_study,
aes(x=Condition, y=(Proportion)*100)) +
geom_bar(stat="identity") +
scale_x_discrete(breaks=c("Control","Experimental"),
labels=c("Control", "Experimental")) + ylim(0, 100) +
labs(title = "Original study",
x = "Condition",
y = "Percentage correct (%)")
grid.arrange(plot_original_study, plot_Wilcox_study, plot, ncol = 3)
# after coding answers, load file
relevant_tidy_data <- read.csv("../data/experiment_coded.csv")
# generate contingency table that displays how many participants in the control
# and experimental condition provided a correct justification
table <- with(
relevant_tidy_data,
table(correct_justification, control))
# The first proportion is that of correct justifications given in
# the control condition. The second proportion is that of correct justifications
# given in experimental condition.
proportions = data.frame(Condition=c("Control","Experimental"),
Proportion=c((table[2, 2]/
(table[2, 2] + table[1, 2])),
(table[2,1]/
(table[2, 1] + table[1, 1]))))
# perform Cohen's h test
library("pwr")
# The first proportion is that of correct justifications given in
# the experimental condition. The second proportion is that of correct
# justifications given in control condition.
h <- ES.h(
proportions$Proportion[2],
proportions$Proportion[1]
)
# perform Fisher's exact test
fisher_exact_test <- fisher.test(as.matrix(table))
# generate contingency table that displays how many participants in the control
# and experimental condition indicated that the contestant should switch
# (i.e., gave a correct answer)
table_switch <- with(
relevant_tidy_data,
table(switch, control))
# Chi squared test for rate of switch choices
chisq_test <- chisq.test(table_switch)
# Plots of results
library(ggplot2)
# Plot from rescue replication study
plot <- ggplot(data=proportions,
aes(x=Condition, y=(Proportion)*100)) +
geom_bar(stat="identity") +
scale_x_discrete(breaks=c("Control", "Experimental"),
labels=c("Control", "Experimental")) + ylim(0, 100) +
labs(title = "Second replication",
x = "Condition",
y = "Percentage correct (%)")
# Plot from Wilcox study
proportions_Wilcox_study = data.frame(Condition=c("Control","Experimental"),
Proportion=c(0, 0))
plot_Wilcox_study <- ggplot(data=proportions_Wilcox_study,
aes(x=Condition, y=(Proportion)*100)) +
geom_bar(stat="identity") +
scale_x_discrete(breaks=c("Control","Experimental"),
labels=c("Control", "Experimental")) + ylim(0, 100) +
labs(title = "First replication",
x = "Condition",
y = "Percentage correct (%)")
# Plot from the original study
proportions_original_study = data.frame(Condition=c("Control","Experimental"),
Proportion=c(.03, .38))
plot_original_study <- ggplot(data=proportions_original_study,
aes(x=Condition, y=(Proportion)*100)) +
geom_bar(stat="identity") +
scale_x_discrete(breaks=c("Control","Experimental"),
labels=c("Control", "Experimental")) + ylim(0, 100) +
labs(title = "Original study",
x = "Condition",
y = "Percentage correct (%)")
library(gridExtra)
grid.arrange(plot_original_study, plot_Wilcox_study, plot, ncol = 3)
